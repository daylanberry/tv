[{"/Users/daylanberry/Desktop/tv/src/index.js":"1","/Users/daylanberry/Desktop/tv/src/components/Header.js":"2","/Users/daylanberry/Desktop/tv/src/App.js":"3","/Users/daylanberry/Desktop/tv/src/components/DisplayShow.js":"4","/Users/daylanberry/Desktop/tv/src/components/SeasonList.js":"5","/Users/daylanberry/Desktop/tv/src/components/Episode.js":"6","/Users/daylanberry/Desktop/tv/src/components/SeasonListHeader.js":"7","/Users/daylanberry/Desktop/tv/src/reportWebVitals.js":"8","/Users/daylanberry/Desktop/tv/src/components/ReplaceShow.js":"9","/Users/daylanberry/Desktop/tv/src/components/Loader.js":"10"},{"size":547,"mtime":1607643673226,"results":"11","hashOfConfig":"12"},{"size":606,"mtime":1607724366743,"results":"13","hashOfConfig":"12"},{"size":3318,"mtime":1607731248757,"results":"14","hashOfConfig":"12"},{"size":960,"mtime":1607724520349,"results":"15","hashOfConfig":"12"},{"size":233,"mtime":1607663506092,"results":"16","hashOfConfig":"12"},{"size":1109,"mtime":1607724543766,"results":"17","hashOfConfig":"12"},{"size":333,"mtime":1607723870625,"results":"18","hashOfConfig":"12"},{"size":362,"mtime":1606166484534,"results":"19","hashOfConfig":"12"},{"size":1391,"mtime":1607729689068,"results":"20","hashOfConfig":"12"},{"size":365,"mtime":1607726360652,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"yf16zj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/daylanberry/Desktop/tv/src/index.js",[],["50","51"],"/Users/daylanberry/Desktop/tv/src/components/Header.js",["52"],"import React from 'react';\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\n\n\nconst Header = ({handleSearchChange, handleSubmit}) => {\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" style={{display: 'flex', justifyContent: 'space-between'}}>\n      <Navbar.Brand href='/'>Episode Switcher</Navbar.Brand>\n      <Form onSubmit={handleSubmit} inline>\n        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" onChange={handleSearchChange}/>\n        <Button type='submit' variant=\"outline-info\">Search</Button>\n      </Form>\n    </Navbar>\n  )\n}\n\nexport default Header;","/Users/daylanberry/Desktop/tv/src/App.js",["53","54","55","56","57","58"],"/Users/daylanberry/Desktop/tv/src/components/DisplayShow.js",["59","60"],"import React from 'react';\nimport parse from 'html-react-parser';\nimport './DisplayShow.styles.css';\nimport naImage from '../assets/naImage.jpg'\nimport moment from 'moment'\n\nconst DisplayShow = ({show: {name, genres, premiered, summary, image}}) => {\n\n  const genreRenderer = () => {\n    return genres.map((g, i) => (\n      <span key={i}>{g} | </span>\n    ))\n  }\n\n  let parsedHtml = summary ? summary.replace(/<[^>]+>/g, '') : '';\n  let text = parsedHtml.length < 500 ? parsedHtml : parsedHtml.slice(0, 500) + '...'\n\n\n  return (\n    <div className='show-container'>\n      <div className='main-img'>\n        <img\n          src={image && image.medium ? image.medium: naImage}\n        />\n      </div>\n      <div className='show-info'>\n        <h3>{name}</h3>\n        {genreRenderer()}\n        <span>Premiered on {moment(premiered).format('MMM, D, Y')}</span>\n        <div>\n          {text}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DisplayShow;",["61","62"],"/Users/daylanberry/Desktop/tv/src/components/SeasonList.js",[],"/Users/daylanberry/Desktop/tv/src/components/Episode.js",["63","64"],"import React from 'react';\nimport moment from 'moment'\nimport Truncate from 'react-truncate-html';\nimport SeasonListHeader from './SeasonListHeader';\nimport naImage from '../assets/naImage.jpg'\nimport './Episode.styles.css'\n\nconst Episode = ({ep}) => {\n\n  let description = ep.summary ? ep.summary.replace(/<[^>]+>/g, '') : '';\n  let text = description.length < 200 ? description : description.slice(0, 190) + '...'\n\n  let aired = moment(ep.airdate).format('MMM, D, Y')\n\n  return (\n    <>\n      {\n        ep.number === 1 && (\n          <SeasonListHeader sNum={ep.season} epNum={ep.number} aired={aired}/>\n        )\n      }\n      <div className='ep-container'>\n        <div>\n          <img\n            src={ep.image ? ep.image.medium : naImage}\n            className='ep-image'\n          />\n        </div>\n        <div className='ep-desc'>\n          <h6>{ep.name}</h6>\n          <span className='season-info'>\n            Season {ep.season} | Episode: {ep.number} | {aired}\n          </span>\n\n          <div>\n            {text}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Episode","/Users/daylanberry/Desktop/tv/src/components/SeasonListHeader.js",["65"],"import React from 'react';\nimport moment from 'moment';\n\nconst SeasonListHeader = ({sNum, epNum, aired}) => {\n\n  return (\n    <div style={{marginTop: '30px', padding: '10px'}}>\n      <h4>Season {sNum}</h4>\n      <div>\n        {epNum} episodes | Aired {aired}\n      </div>\n      <hr/>\n    </div>\n  )\n}\n\nexport default SeasonListHeader","/Users/daylanberry/Desktop/tv/src/reportWebVitals.js",[],["66","67"],"/Users/daylanberry/Desktop/tv/src/components/ReplaceShow.js",["68","69"],"import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nconst ReplaceShow = ({dropdownValues, handleSeasonChange, handleEpisodesChange}) => {\n\n  // const {totalSeason, totalSeasonEpisodes} = dropdownValues;\n\n  const renderSeasons = () => {\n\n  }\n\n  const renderEpisode = () => {\n\n  }\n\n  return (\n    <div>\n      <Form inline>\n        <Form.Label className=\"my-1 mr-2\" htmlFor=\"inlineFormCustomSelectPref\">\n          Replace\n        </Form.Label>\n        <Form.Control\n          as=\"select\"\n          className=\"my-1 mr-sm-2\"\n          id=\"inlineFormCustomSelectPref\"\n          custom\n          onChange={handleSeasonChange}\n        >\n          <option value={1}>Season 1</option>\n          <option value={2}>Season 2</option>\n          <option value={3}>Season 3</option>\n          <option value={4}>Season 4</option>\n        </Form.Control>\n        <Form.Control\n          as=\"select\"\n          className=\"my-1 mr-md-2\"\n          id=\"inlineFormCustomSelectPref\"\n          custom\n          onChange={handleEpisodesChange}\n        >\n          <option value=\"0\">Episode 1</option>\n          <option value=\"1\">One</option>\n          <option value=\"2\">Two</option>\n          <option value=\"3\">Three</option>\n        </Form.Control>\n        <Button type=\"submit\" className=\"my-1\">\n          Replace\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\n\nexport default ReplaceShow;","/Users/daylanberry/Desktop/tv/src/components/Loader.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":18,"nodeType":"76","messageId":"77","endLine":2,"endColumn":21},{"ruleId":"74","severity":1,"message":"78","line":26,"column":26,"nodeType":"76","messageId":"77","endLine":26,"endColumn":43},{"ruleId":"74","severity":1,"message":"79","line":34,"column":10,"nodeType":"76","messageId":"77","endLine":34,"endColumn":23},{"ruleId":"74","severity":1,"message":"80","line":35,"column":10,"nodeType":"76","messageId":"77","endLine":35,"endColumn":24},{"ruleId":"74","severity":1,"message":"81","line":36,"column":10,"nodeType":"76","messageId":"77","endLine":36,"endColumn":22},{"ruleId":"74","severity":1,"message":"82","line":37,"column":10,"nodeType":"76","messageId":"77","endLine":37,"endColumn":23},{"ruleId":"83","severity":1,"message":"84","line":41,"column":6,"nodeType":"85","endLine":41,"endColumn":8,"suggestions":"86"},{"ruleId":"74","severity":1,"message":"87","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":22,"column":9,"nodeType":"90","endLine":24,"endColumn":11},{"ruleId":"70","replacedBy":"91"},{"ruleId":"72","replacedBy":"92"},{"ruleId":"74","severity":1,"message":"93","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":24,"column":11,"nodeType":"90","endLine":27,"endColumn":13},{"ruleId":"74","severity":1,"message":"94","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":14},{"ruleId":"70","replacedBy":"95"},{"ruleId":"72","replacedBy":"96"},{"ruleId":"74","severity":1,"message":"97","line":8,"column":9,"nodeType":"76","messageId":"77","endLine":8,"endColumn":22},{"ruleId":"74","severity":1,"message":"98","line":12,"column":9,"nodeType":"76","messageId":"77","endLine":12,"endColumn":22},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'setDropdownValues' is assigned a value but never used.","'currentSeason' is assigned a value but never used.","'currentEpisode' is assigned a value but never used.","'totalSeasons' is assigned a value but never used.","'totalEpisodes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pickShowByNameOrRandomly'. Either include it or remove the dependency array.","ArrayExpression",["101"],"'parse' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["99"],["100"],"'Truncate' is defined but never used.","'moment' is defined but never used.",["99"],["100"],"'renderSeasons' is assigned a value but never used.","'renderEpisode' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [pickShowByNameOrRandomly]",{"range":"104","text":"105"},[1136,1138],"[pickShowByNameOrRandomly]"]